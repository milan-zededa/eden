# Test for `nginx` server's port redirection switching

[!exec:bash] stop
[!exec:sleep] stop

# Starting of reboot detector with 2 reboots limit
! test eden.reboot.test -test.v -timewait=0 -reboot=0 -count=2 &

eden pod deploy -p 8027:80 docker://nginx -v debug -n nginx --memory=512MB

test eden.app.test -test.v -timewait 20m RUNNING nginx

eden pod ps
cp stdout pod_ps
exec bash server_ip.sh nginx

exec sleep 10
exec -t 5m bash run_client.sh
stdout 'Welcome to nginx!'

eden pod modify t1 -p 8028:80

eden pod ps
cp stdout pod_ps
exec bash server_ip.sh nginx

exec sleep 10
exec -t 5m bash run_client.sh
stdout 'Welcome to nginx!'

eden pod modify t1 -p 8027:80

eden pod ps
cp stdout pod_ps
exec bash server_ip.sh nginx

exec sleep 10
exec -t 5m bash run_client.sh
stdout 'Welcome to nginx!'

eden pod delete nginx

test eden.app.test -test.v -timewait 10m - nginx

message 'Resetting of EVE'
eden eve reset
exec sleep 10

-- server_ip.sh --
echo export ENGINX_PORT=$(grep "^$1\s" pod_ps | awk '{print $5}' | cut -d ":" -f 2) > env

-- run_client.sh --
. ./env
EDEN={{EdenConfig "eden.root"}}/{{EdenConfig "eden.bin-dist"}}/{{EdenConfig "eden.eden-bin"}}

for i in `seq 10`
do
    echo $EDEN sdn fwd eth0 $ENGINX_PORT -- curl FWD_IP:FWD_PORT
    $EDEN sdn fwd eth0 $ENGINX_PORT -- curl FWD_IP:FWD_PORT | grep "Welcome to nginx!" && break
    sleep 20
done

-- eden-config.yml --
{{/* Test's config. file */}}
test:
    controller: adam://{{EdenConfig "adam.ip"}}:{{EdenConfig "adam.port"}}
    eve:
      {{EdenConfig "eve.name"}}:
        onboard-cert: {{EdenConfigPath "eve.cert"}}
        serial: "{{EdenConfig "eve.serial"}}"
        model: {{EdenConfig "eve.devmodel"}}
