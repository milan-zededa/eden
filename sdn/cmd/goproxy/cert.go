package main

import (
	"crypto/tls"
	"crypto/x509"

	"github.com/elazarl/goproxy"
)

var caCert = []byte(`-----BEGIN CERTIFICATE-----
MIIFSDCCAzCgAwIBAgIBATANBgkqhkiG9w0BAQsFADAxMQswCQYDVQQGEwJSVTEQ
MA4GA1UEChMHbGYtZWRnZTEQMA4GA1UEAxMHUm9vdCBDQTAeFw0yMjA3MDYxNTMx
MTBaFw0zMjA3MDYxNTMxMjBaMDExCzAJBgNVBAYTAlJVMRAwDgYDVQQKEwdsZi1l
ZGdlMRAwDgYDVQQDEwdSb290IENBMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIIC
CgKCAgEA1LfHoZuyzcnap0Aq8tcZcCPdn/Y9xKQkMUZFQ9V4xRWGjVP4NIgw+6By
CL0oeG66DMmCZcg+HiLYdRHPmSAZw4QLgVO+xxRDUaln6nom9cyu2XMsKcXzB/l8
xG39c178jojrOJSZ0y9HBgiRHjjlat3kZ6LLFeZg+ms9mcG0520SniXzhUM4OEsj
Er/q2s0fM4Wz4op7peWzhJUxQV7CJgHHrNDbAxQ03K+U/AS5x3yo0fH9LFHD6mSq
poWxlxQsj/seIQ0iKF2f/sPGB/J1EQOHrtGaTvNcbZaVhVsjmjz6g0aUQbGNh+Fw
39ODRmb4t/FaT8K2PWsISTceyByRCJkmcnqAJZ7U+womHU3zkbpD/vQVLR2U1M+D
R9QEs2eSda8MvQ1X7Cu9wy67IsYa679UxpiIoA9Ve9vTntuo4OBmsstyr0L6asDU
sWpGEGsSXd42kyQEV7f+OQMamc2NJZCkPYnDut6OpJ3W7xc6TTIHxE0UZ5n+nGv8
LnpF3Z/TShf/RaBWAJalXOuuSyUxnZdmQK9LaqP4SIgSK/lg22XtMnWqHVua4vNx
ELnU258RTUDNK1HQS1P7yUYQG0X5cdKAKoK8YM6OksQ1CqmeQfTlijlAtVIQEeFe
013JQ4Durd7pbCxzUZX32lf/6BjYSUS2bfXPQ/eFUb1EHbIzlZsCAwEAAaNrMGkw
DgYDVR0PAQH/BAQDAgEGMBMGA1UdJQQMMAoGCCsGAQUFBwMBMBIGA1UdEwEB/wQI
MAYBAf8CAQIwHQYDVR0OBBYEFFCprm6CF1gIxleEWMmsHrpTpUuuMA8GA1UdEQQI
MAaHBH8AAAEwDQYJKoZIhvcNAQELBQADggIBAAQOh40EOnVoK3YApuLCGhkhVWoe
3615czS7BwMogznYHtBWhK3bootFNbThiVTwApejKACfAOiHc11CojPXGPhLY5rM
YqHjRgfcJsByN+8EZvmHYoD636rtqKxBCu3fHkIOjSLr1NIb1aVLE2WQ9I0w5+qJ
BeWHpc5c5T1MO04bAmqX1CfqfDcS6WxrSyhTcKQhwSVEQruni411xarWei33fipp
mU/iiuexOt7fha0ihohqx+7gUxP8aRRKdtXz+ttO93+dTw1TsqebLyUZTecLz36n
FMOi/wH9CjlyJ/5+wIkNHCCXmbpEiWWexWp96+SOe954Y+/gAWXSsYIDkYcUpxXA
boamz8NQTWumlVoRMFpx5xIz7pBhEp3JZN86aQxr7t/Mt8rPkLqVifKNT9kCSt4R
QSH0/ynmE17d9y4S4ZlSPzrvFsXUWfAtUAGUoKPY6GBybd+4+hHFhl5/sojZp1JS
9gBtBWcTGYQ3HG/czchAa8CmorHfIvO0mpjX92wIZblN+ZPOWwz9Feg/Jm463KrK
2gBH/5JQNKEkJ2S7BXDhwo0pGgWJCVuSwLMxWqN/La/kk5etWn1/9JKD7Vy/oYzk
Ri3riAbMJls4sjlq0+8r/yu6+zEdiJC0ez/d3SQZTekUBKEkmlW8RxLtaZwNW9+N
juwTIRxEQhbJzWtQ
-----END CERTIFICATE-----`)

var caKey = []byte(`-----BEGIN PRIVATE KEY-----
MIIJQwIBADANBgkqhkiG9w0BAQEFAASCCS0wggkpAgEAAoICAQDUt8ehm7LNydqn
QCry1xlwI92f9j3EpCQxRkVD1XjFFYaNU/g0iDD7oHIIvSh4broMyYJlyD4eIth1
Ec+ZIBnDhAuBU77HFENRqWfqeib1zK7ZcywpxfMH+XzEbf1zXvyOiOs4lJnTL0cG
CJEeOOVq3eRnossV5mD6az2ZwbTnbRKeJfOFQzg4SyMSv+razR8zhbPiinul5bOE
lTFBXsImAces0NsDFDTcr5T8BLnHfKjR8f0sUcPqZKqmhbGXFCyP+x4hDSIoXZ/+
w8YH8nURA4eu0ZpO81xtlpWFWyOaPPqDRpRBsY2H4XDf04NGZvi38VpPwrY9awhJ
Nx7IHJEImSZyeoAlntT7CiYdTfORukP+9BUtHZTUz4NH1ASzZ5J1rwy9DVfsK73D
Lrsixhrrv1TGmIigD1V729Oe26jg4Gayy3KvQvpqwNSxakYQaxJd3jaTJARXt/45
AxqZzY0lkKQ9icO63o6kndbvFzpNMgfETRRnmf6ca/wuekXdn9NKF/9FoFYAlqVc
665LJTGdl2ZAr0tqo/hIiBIr+WDbZe0ydaodW5ri83EQudTbnxFNQM0rUdBLU/vJ
RhAbRflx0oAqgrxgzo6SxDUKqZ5B9OWKOUC1UhAR4V7TXclDgO6t3ulsLHNRlffa
V//oGNhJRLZt9c9D94VRvUQdsjOVmwIDAQABAoICAFDVJX87805QDk7QC4IMSxZa
CrXmlMJMvZQb5+ZHEIWUEHVUG1WbC0ITTkIT33UkXn7NdEfJOBGrnCWghwrhL+kk
HFsgv7ZW9N3rShnIIVX2Wds38OhO2HOHUuoyAcX9qmtfjEML9QhTRuH8D2k0pble
aJUZP6Mq0F9YsSfkfCIVSKXgNhHF4W9C3ikZ1N0gZWLmw9yqUyJPj1AqgXUd1Rks
Q/xfwVoCK7RQ5ISAJzivHlfpZROaXqCLcG2nED0g5W4xNtnIa9p6+XmOW4pZkDLO
7Jh5/fFSeSULu/XZFEZgNbH8+AmetvGTsZjcf14ZcxozFOaKT0Y3jgaEc6YHdPTm
BZwmJ8b+781z9YA1dsahgt/9+FMa1I2J/c7RzXH5g7VeSsj5Z0u6upDUsHK1mVJl
RTTfGTQGzqHWVW73Dv3Vq1sbpsHeAevPGARK0629hPOYX9Wh6E4XbHg0ocbKP3XC
9spQ7yPXA/Bm4DdTFBelUPCGQlNIz/Q0FQV8c0PXifggxIABm6xrLKjuhsInCg3d
xv6syX+AXbKXhUdns+2kEIMq3XvBZ+CAmJ1zR8TTKFNey6LbhEU4AIpQ2STRA8lf
90iyJ449ZxTDqleBvtB4iseT6K7JCZHnhE8qYaZH4oupnNz3fTHvlKpm+/3dWgnc
7m5UmbxOCgdiSJkKBMsBAoIBAQDx697ZHbGpfsYsfL9e/Nvj6OedZw2A98i7xJPl
HEO034eVFHDwq7qRCV/CMvnil455jGq2M6Rss2ZammXoHb3GRGE3BLO998WhkS9R
FG3uco8cc9o1+0YPBUBBuZKyZwIAdudn8NOSFouZhQxb4PnoQ0SR/Ub00P1MDMKi
gZ4h9MIFXYE5UvueIR4jfql3E3maHE/4SFgU+BxqdIXY3Sw3FaD3kciJ96aHs2t7
40Tw7bAvtHemlYJ72NIpSZc2uWnz/OjLbtlOJZAwQeW1Pd8MEHcHsNVLJeZkaufF
OM2w9KQAsQmIcWsa1iUQtjBTZ1Tw8QyMeHBfli9y/dGmeRVxAoIBAQDhGNZzC6Qp
Z4NcxItMEKebirCzHCTXqYsQa80E5z8GcFSg/97cHWEysaNULUucv7m4V1hNwG7Y
9rKwRReZhC3Tul1Zh5VVcGk+eVZ79ZjFSwLW8TTCTqP11jCVCJbQFfA5H/XBLowe
QUCgJnvSLOPYHJh99blTJ+VQB9REZHC42tWXzmnMSdg/EFUzGIQuHZjEFcHNNsE1
T2rO1dO3dwwcB2/85Vv8Hb9q6C50FVwuNaNocOyAo/Tg9XcOmGfUnBw5n4n8ivST
2GrTHbW61CbNP/rykRS485jErke2p3q7FJBx/hhBOFNk8UA4LE9RaFPlU0kz96uh
FFS9E3DxWmXLAoIBAGNzACgmwcsYl2TgX1cwAUDelKArJez3b2ho9hdAGEE5hqXt
QkRdhBNtVBUkGX9hqCslYxTFg/k/gnsKb4wM9d+UapZQc4dLXM3/PgFJsatNIrGi
mniIdBNmqDSckcaO+86vEo+y+3ZZmEei3yLCCFnHlV+iS9IGO6pQsI5XVGdHE59b
Ae1LxK4LlTUoM4gE1H9a1jENpE/yctP8VK2CtlNqq8I6BsNYr/em9S93jPax7zSd
LnanjX1V84cPfn77l6e6NwSx69jpLi34WPK5nYB7IENkGTqMOPrcy6xSnpP47ZZv
MKkLXukoURJeot0WZF+r5+my9RcGSTkvSEj0C7ECggEBAJrtUHSAd62zvDs2X7Wr
5OBuda3hWg5BeCCGQeb1DnDtEaJ6WbZgVkzg7Mx8HIW3hCk3nORu5RxZt6UQ+OxF
iJEovSVo50SWCSnhs7+/yzVHqp2sCKcQH1ON54Q8FCkGYH/A2pHq6q/MM6HGuwRu
tydAj0hqvvJYDEGoEdY810S0AbzpafIchUTqhemUHy3qWwHjA6+t1w9NKPNRQtYM
jv4ftFl4t3XwN5ZqVca6COcZLe4tguoLbvkCmb4m8ZfpFpgmkX+LWEkF9Ih382Oy
rz4noh4f8wZVSzlbxqoV3agzwDNlMuZ40RUx4wSGotUiHFRDnaex+KP2bVhxsBO+
Jz8CggEBAIar2YYqWQ4gxLe+ByJSd1PKmkKEHEAnZNeHerRRRK542S/G7VKXbixS
e6itlKGYmVb7mQ+egL64AW2M5j6DjKoAm74/ILkmg2+fYYogLATNcYSdRU0zhI6+
CuhR8lu4LlzESlcry4ToMCd+FVptq35ila4m6LDuFf9zyWGhCVHcmYnMoLWxrnWB
nPFZMdCabMCxzJrGBG0Gsu6O5d4vxIxVCZKJ+pjidvYsZw10qMBRGird6uACoc/y
P+ufj1gGBK6vJOfxQAeJk4wkUrNP+rjrlIEpuncMrt73fWCN60smTq+qajrWsdvi
V4XY8K7YQLNiBMFSBVwSMYYg5z93uQo=
-----END PRIVATE KEY-----`)

func setCA(caCert, caKey []byte) error {
	goproxyCa, err := tls.X509KeyPair(caCert, caKey)
	if err != nil {
		return err
	}
	if goproxyCa.Leaf, err = x509.ParseCertificate(goproxyCa.Certificate[0]); err != nil {
		return err
	}
	goproxy.GoproxyCa = goproxyCa
	goproxy.OkConnect = &goproxy.ConnectAction{Action: goproxy.ConnectAccept, TLSConfig: goproxy.TLSConfigFromCA(&goproxyCa)}
	goproxy.MitmConnect = &goproxy.ConnectAction{Action: goproxy.ConnectMitm, TLSConfig: goproxy.TLSConfigFromCA(&goproxyCa)}
	goproxy.HTTPMitmConnect = &goproxy.ConnectAction{Action: goproxy.ConnectHTTPMitm, TLSConfig: goproxy.TLSConfigFromCA(&goproxyCa)}
	goproxy.RejectConnect = &goproxy.ConnectAction{Action: goproxy.ConnectReject, TLSConfig: goproxy.TLSConfigFromCA(&goproxyCa)}
	return nil
}
